name: Run Node.js Scraper

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-scraper:
    runs-on: windows-latest

    steps:
    # 1. Check out the repo
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # 3. Pre-check and generate missing dependencies if necessary
    - name: Check for missing dependencies and install if necessary
      run: |
        if (-not (Test-Path "package-lock.json")) {
          echo "package-lock.json not found, running npm install to generate it"
          npm install
        }
        
        if (-not (Test-Path "node_modules")) {
          echo "node_modules not found, running npm install"
          npm install
        }

    # 4. Install Chromium (for Puppeteer)
    - name: Install Chromium (for Puppeteer)
      run: |
        choco install chromium --no-progress -y

    # 5. Run the scraper
    - name: Run scraper
      env:
        CHROME_BIN: "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"  # Set CHROME_BIN environment variable for Puppeteer
      run: |
        node scraper.js  # This runs your scraper script!

    # 6. Verify scrapedData.json exists
    - name: Verify scrapedData.json exists
      shell: pwsh
      run: |
        # Check if scrapedData.json exists in the workspace
        if (-not (Test-Path "${{ github.workspace }}\scrapedData.json")) {
          Write-Error "scrapedData.json does not exist!"
        } else {
          Write-Host "scrapedData.json exists."
        }

    # 7. Commit and push scraped data if it changed
    - name: Commit and push scraped data
      shell: bash
      run: |
        set -e
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git add scrapedData.json

        # Exit early if no changes to commit
        if git diff --cached --quiet; then
          echo "No changes to commit."
          exit 0
        fi

        git commit -m "chore: update scraped data"
        git pull --rebase origin main
        git push origin HEAD:main
